// Code generated by mockery v2.3.0. DO NOT EDIT.

package mocks

import (
	bugzilla "github.com/LF-Engineering/da-ds/bugzilla"
	mock "github.com/stretchr/testify/mock"
)

// ManagerProvider is an autogenerated mock type for the ManagerProvider type
type ManagerProvider struct {
	mock.Mock
}

// Sync provides a mock function with given fields:
func (_m *ManagerProvider) Sync() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// buildServices provides a mock function with given fields: m
func (_m *ManagerProvider) buildServices(m *bugzilla.Manager) (*bugzilla.Fetcher, *bugzilla.Enricher, bugzilla.ESClientProvider, error) {
	ret := _m.Called(m)

	var r0 *bugzilla.Fetcher
	if rf, ok := ret.Get(0).(func(*bugzilla.Manager) *bugzilla.Fetcher); ok {
		r0 = rf(m)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*bugzilla.Fetcher)
		}
	}

	var r1 *bugzilla.Enricher
	if rf, ok := ret.Get(1).(func(*bugzilla.Manager) *bugzilla.Enricher); ok {
		r1 = rf(m)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*bugzilla.Enricher)
		}
	}

	var r2 bugzilla.ESClientProvider
	if rf, ok := ret.Get(2).(func(*bugzilla.Manager) bugzilla.ESClientProvider); ok {
		r2 = rf(m)
	} else {
		if ret.Get(2) != nil {
			r2 = ret.Get(2).(bugzilla.ESClientProvider)
		}
	}

	var r3 error
	if rf, ok := ret.Get(3).(func(*bugzilla.Manager) error); ok {
		r3 = rf(m)
	} else {
		r3 = ret.Error(3)
	}

	return r0, r1, r2, r3
}
